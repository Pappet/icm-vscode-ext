{
  "scopeName": "source.icm",
  "patterns": [
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#ini-sections" },
    { "include": "#keystring-blocks" },
    { "include": "#numbers" },
    { "include": "#format-macros" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        { "name": "comment.line.semicolon.icm", "match": ";.*$" },
        { "name": "comment.line.number-sign.icm", "match": "#.*$" }
      ]
    },
    "strings": {
      "patterns": [
        { "name": "string.quoted.double.icm", "begin": "\"", "end": "\"", "patterns": [{ "match": "\\\\.", "name": "constant.character.escape.icm" }] },
        { "name": "string.quoted.single.icm", "begin": "'", "end": "'" }
      ]
    },
    "numbers": {
      "patterns": [
        { "name": "constant.numeric.hex.icm", "match": "\\b&h[0-9a-fA-F]+\\b" },
        { "name": "constant.numeric.decimal.icm", "match": "\\b\\d+(?:[.,]\\d+)?\\b" }
      ]
    },
    "ini-sections": {
      "patterns": [{
        "name": "entity.name.tag.ini.icm",
        "begin": "(\\[)",
        "end": "(\\])",
        "beginCaptures": { "1": { "name": "punctuation.definition.tag.begin.icm" } },
        "endCaptures": { "1": { "name": "punctuation.definition.tag.end.icm" } }
      }]
    },
    "keystring-blocks": {
      "patterns": [{
        "name": "meta.keystring.icm",
        "begin": "(\\[)([A-Za-z_][A-Za-z0-9_]*)(:)?",
        "end": "(\\])",
        "beginCaptures": {
          "1": { "name": "punctuation.definition.block.begin.icm" },
          "2": { "name": "entity.name.type.class.icm" },
          "3": { "name": "punctuation.separator.key-value.icm" }
        },
        "endCaptures": {
          "1": { "name": "punctuation.definition.block.end.icm" }
        },
        "patterns": [
          { "include": "#format-parameter-block" },
          {
             "match": "\\b([A-Za-z_][A-Za-z0-9_]*)\\s*(=)",
             "captures": {
                 "1": {"name": "variable.parameter.icm"},
                 "2": {"name": "keyword.operator.assignment.icm"}
             }
          },
          { "include": "#strings" }
        ]
      }]
    },
    "format-parameter-block": {
      "begin": "\\b(Format)\\s*(=)\\s*(!?)(\\(|\\{)",
      "beginCaptures": {
        "1": { "name": "variable.parameter.icm" },
        "2": { "name": "keyword.operator.assignment.icm" },
        "3": { "name": "keyword.operator.icm" },
        "4": { "name": "punctuation.definition.format.begin.icm" }
      },
      "end": "(\\)|\\})",
      "endCaptures": {
        "1": { "name": "punctuation.definition.format.end.icm" }
      },
      "name": "meta.format-string.icm",
      "patterns": [
        { "include": "#format-macros" },
        { "include": "#macros" },
        { "include": "#functions" }
      ]
    },
    "format-macros": {
      "patterns": [
        { "name": "constant.character.escape.icm", "match": "\\\\(CR|LF|TAB|BKSP)" },
        { "name": "constant.character.escape.icm", "match": "\\\\fs\\d+" },
        { "name": "constant.character.escape.icm", "match": "\\\\#\\w+" }
      ]
    },
    "macros": {
      "patterns": [
        {
          "name": "variable.language.macro.icm",
          "begin": "\\{",
          "end": "\\}",
          "patterns": [{
            "match": "\\b(Begin|End|Duration|Macro|CT_Dose|CT_SubstRate|Date|Code|CodeText|ItemText|FreeText|GroupName|TreatmentName|CurrentUser|PatientsAge|DBPath|IniPathRemote)\\b",
            "name": "variable.other.placeholder.icm"
          }]
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "support.function.math.icm",
          "match": "\\b(Count|Sum|Min|Max|Avg|DecodeEq|DecodeLs|DecodeGr|Round|Greater|Less|Equal|In|Id|Ig|Abs|Fix|Int|Sgn)\\b"
        }
      ]
    }
  }
}